#
# Xilinx Makefile
#

# path to ISE/settings{32,64}.sh
XIL_ISE_ENV  ?= /opt/Xilinx/12.4/ISE_DS/settings64.sh
# path to EDK/settings{32,64}.sh
XIL_EDK_ENV  ?= /opt/Xilinx/12.4/ISE_DS/EDK/settings64.sh
# home of Xilinx EDK
XIL_EDK_HOME ?= /opt/Xilinx/12.4/ISE_DS/EDK
# selected design to download
HW_DESIGN    ?= default

boot-xmd: image-$(KERNEL)
	$(Q) source $(XIL_ISE_ENV) && source $(XIL_EDK_ENV) \
	&& xmd <<< "connect mb mdm; dow image-$(KERNEL); run"
	
download-design: download.cmd $(HW_DESIGN_FILE)
	$(Q) source $(XIL_ISE_ENV) && source $(XIL_EDK_ENV) \
	&& impact -batch download.cmd

download.cmd:
	$(Q) echo "setMode -bscan"    > download.cmd
	$(Q) echo "setCable -p auto" >> download.cmd
	$(Q) echo "identify"         >> download.cmd
	$(Q) echo "identifympm"      >> download.cmd
	$(Q) echo "assignfile -p 1 -file $(HW_DESIGN_FILE)" >> download.cmd
	$(Q) echo "program -p 1"     >> download.cmd
	$(Q) echo "quit"             >> download.cmd

##############################

HW_HOME   ?= ../linux-design
MSS       ?= system.mss
DTS_MSS   ?= linux26.mss
MHS       ?= system.mhs
BIT       ?= download.bit
NEWBIT    ?= new.bit
NEWDTS    ?= new.dts
MB_PROC   ?= microblaze_0
FPGA      ?= xc3s1600efg320-4

HW_HOME_REAL = $(realpath $(HW_HOME))
MSS_FILE     = $(HW_HOME_REAL)/$(MSS)
MHS_FILE     = $(HW_HOME_REAL)/$(MHS)
BIT_FILE     = $(HW_HOME_REAL)/implementation/$(BIT)
NEWBIT_FILE  = $(HW_DESIGN_DIR)/$(NEWBIT)
NEWDTS_FILE  = $(DTS_DIR)/$(NEWDTS)

build-design: $(BIT_FILE)
$(BIT_FILE): $(MHS_FILE) $(MSS_FILE)
	$(MAKE) -C $(HW_HOME) -f system.make bits init_bram

install-design: $(NEWBIT_FILE)
$(NEWBIT_FILE): $(BIT_FILE)
	$(Q) cp $(BIT_FILE) $(NEWBIT_FILE)
	$(Q) ls -lh $(NEWBIT_FILE)

##########################################
# a little bit stupid, but works
# prerequisites:
# $(HW_HOME)/<name>.mss 
# $(HW_HOME)/system.mhs 
# $(HW_HOME)/microblaze_0
# $(HW_HOME)/bsp/device-tree_v0_00_x/...
gen-dts: $(NEWDTS_FILE)
$(NEWDTS_FILE): $(HW_HOME)/$(DTS_MSS)
	$(Q) mkdir -p tmp
	$(Q) cp -r $(HW_HOME_REAL)/bsp $(HW_HOME_REAL)/$(MB_PROC) tmp
	$(Q) source $(XIL_EDK_ENV)    \
	  && source $(XIL_ISE_ENV) \
	  && cd tmp                \
	  && libgen -mhs $(HW_HOME_REAL)/$(MHS) $(HW_HOME_REAL)/$(DTS_MSS) \
		  -p $(FPGA) -pe $(MB_PROC)                                     \
	  && cp $(MB_PROC)/libsrc/device-tree_v0_00_x/xilinx.dts $(NEWDTS_FILE)
	$(Q) ls -lh $(NEWDTS_FILE)
	$(Q) rm -Rf $(HW_HOME_REAL)/tmp

##############################

help-xilinx:
	@echo "=============================================="
	@echo "Xilinx advanced:"
	@echo "  gen-dts                ... generates DTS file to $(DTS_DIR)/new.dts"
	@echo "  build-design           ... builds bitstream (synthesis, map & par, place & route, ...) through system.make in EDK project"
	@echo "  install-design         ... installs the generated bitstream to design directory with name from variable NEWBIT"
	@echo "  HW_HOME                ... home of hardware (EDK) project variable"
	@echo "  MSS                    ... name of Microprocessor Software Specification file (default: system.mss)"
	@echo "  MHS                    ... name of Microprocessor Hardware Specification file (default: system.mhs)"
	@echo "  BIT                    ... name of bitstream file generated by synthesis (default: download.bit)"
	@echo "  NEWBIT                 ... name of bitstream file when installing it in HW_DESIGN_DIR directory (default: new.bit)"
	@echo "  NEWDTS                 ... name of dts file when generating it from a design (default: new.dts)"

help: help-xilinx

